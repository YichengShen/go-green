{"version":3,"sources":["services/firebase.js","services/AuthContext.js","utils/capFirstLetter.js","services/registerUserInfo.js","pages/Signup.js","pages/Login.js","pages/ForgotPassword.js","theme.js","components/BottomNav.js","components/AlertDialog.js","components/Header.js","utils/startOfToday.js","utils/uniqueId.js","utils/scoreToColor.js","services/readGlobeMarkers.js","components/Globe.js","components/CityInputField.js","components/SurveyHelperDialog.js","components/DailySurvey.js","services/pushNewSurvey.js","services/checkSurveyCompleted.js","pages/Checkin.js","pages/Badges.js","services/readRankingData.js","pages/Ranking.js","components/PrivateRoute.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","Provider","capFirstLetter","lower","charAt","toUpperCase","substring","toLowerCase","registerUserInfo","firstName","lastName","newUser","uid","collection","doc","set","updateProfile","displayName","useStyles","makeStyles","theme","paper","backgroundColor","palette","primary","main","color","contrastText","padding","spacing","marginBottom","display","flexDirection","alignItems","avatar","margin","secondary","light","greenBoldText","fontWeight","form","width","marginTop","submit","cancel","cssLabel","cssInput","cssOutlinedInput","borderColor","cssFocused","notchedOutline","borderWidth","Signup","firstNameRef","useRef","lastNameRef","emailRef","passwordRef","passwordConfirmRef","error","setError","classes","history","useHistory","handleSubmit","e","a","preventDefault","current","then","result","push","message","Container","component","maxWidth","CssBaseline","Box","p","className","Typography","variant","Avatar","Alert","severity","AlertTitle","onSubmit","Grid","container","item","xs","sm","TextField","autoComplete","name","required","fullWidth","id","label","autoFocus","inputRef","InputLabelProps","root","focused","InputProps","input","inputMode","type","Button","disabled","RouterLink","to","justify","Link","Login","ForgotPassword","setMessage","createMuiTheme","mainLight","dark","typography","fontFamily","join","navTheme","overrides","MuiBottomNavigation","position","bottom","MuiBottomNavigationAction","boxSizing","BottomNav","props","BottomNavigation","pageValue","onChange","event","newValue","onPageChange","showLabels","BottomNavigationAction","icon","Badge","invisible","checkinCompleted","AlertDialog","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","errorMsg","DialogActions","onClick","headerTheme","MuiAppBar","colorPrimary","MuiButton","right","Header","alertOpen","setAlertOpen","handleLogout","AppBar","Toolbar","IconButton","edge","aria-label","mr","Fragment","startOfToday","moment","utc","startOf","toDate","uniqueId","prefix","Date","valueOf","toString","milliseconds","start","getTime","i","sleep","scoreToColor","score","readGlobeMarkers","db","where","get","querySnapshot","markers","forEach","city","data","lat","coordinates","lng","hasOwnProperty","sum","parseFloat","count","markersArray","Object","entries","v","Math","ceil","random","scaleFactor","markerRenderer","marker","size","max","geometry","THREE","material","mesh","glow","createGlowMesh","backside","coefficient","power","add","companions","companionGeometry","min","companionMaterial","companion","lookAt","animate","from","opacity","clone","toArray","scale","tween","animationDuration","easingFunction","onUpdate","x","y","z","intensityChange","intensity","onEnd","delay","Globe","setMarkers","response","console","log","check","options","cameraRotateSpeed","cameraAutoRotateSpeed","focusAnimationDuration","enableMarkerGlow","globeCloudsOpacity","globeGlowColor","enableMarkerTooltip","markerTooltipRenderer","style","height","initialCoordinates","initialCameraDistanceRadiusScale","autocompleteResults","CityInputField","onSetCity","onSetCoordinates","handleSelect","geocodeByAddress","results","getLatLng","latLng","onSelect","searchOptions","types","getInputProps","suggestions","getSuggestionItemProps","placeholder","length","Paper","elevation","map","suggestion","index","active","description","Transition","forwardRef","ref","Slide","direction","withStyles","MuiDialogContent","MuiDialogActions","SurveyHelperDialog","setOpen","handleClose","fontSize","TransitionComponent","PaperProps","dividers","gutterBottom","surveyTheme","MuiToggleButtonGroup","borderRadius","backgroundImage","green","red","MuiToggleButton","sizeLarge","greenBold","DailySurvey","setCity","setCoordinates","level","setLevel","submitError","md","mt","ToggleButtonGroup","orientation","exclusive","newLevel","ToggleButton","pushNewSurvey","newSurvey","date","Timestamp","fromDate","docRef","catch","checkSurveyCompleted","BreakException","Checkin","setCheckinCompleted","surveyCompleted","setSurveyCompleted","setScore","setSubmitError","Badges","readRankingData","cityDict","cityArray","userCount","StyledTable","styled","DataTable","tableTheme","button","dataTable","header","extend","body","icons","columns","property","Text","align","render","datum","pad","vertical","Meter","values","thickness","round","Ranking","rankingData","setRankingData","lg","Grommet","plain","sort","sortable","c","search","step","PrivateRoute","Component","rest","App","setPageValue","overflow","basename","path","exact","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b2ae4a41.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport const auth = app.auth();\nexport const firestore = app.firestore();\nexport default app;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"./firebase\";\n\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const signup = (email, password) => {\n    return auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  const login = (email, password) => {\n    return auth.signInWithEmailAndPassword(email, password);\n  };\n\n  const logout = () => {\n    return auth.signOut();\n  };\n\n  const resetPassword = (email) => {\n    return auth.sendPasswordResetEmail(email);\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n","const capFirstLetter = (lower) => {\n  return lower.charAt(0).toUpperCase() + lower.substring(1).toLowerCase();\n};\n\nexport default capFirstLetter;\n","import firebase from \"firebase/app\";\nimport { firestore } from \"./firebase\";\nimport capFirstLetter from \"../utils/capFirstLetter\";\n\nconst registerUserInfo = (firstName, lastName) => {\n  // The user we just created\n  const user = firebase.auth().currentUser;\n\n  // Push a new user into database\n  const newUser = {\n    uid: user.uid,\n    firstName: capFirstLetter(firstName),\n    lastName: capFirstLetter(lastName),\n  };\n  firestore.collection(\"users\").doc(user.uid).set(newUser);\n\n  // Update display name of user\n  return user.updateProfile({\n    displayName: capFirstLetter(firstName),\n  });\n};\n\nexport default registerUserInfo;\n","import React from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EcoRoundedIcon from \"@material-ui/icons/EcoRounded\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useAuth } from \"../services/AuthContext\";\nimport registerUserInfo from \"../services/registerUserInfo\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(4),\n    marginBottom: theme.spacing(6),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    color: theme.palette.secondary.light,\n    backgroundColor: theme.palette.primary.contrastText,\n  },\n  greenBoldText: {\n    color: theme.palette.secondary.light,\n    fontWeight: \"Bolder\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 0),\n  },\n  cancel: {\n    margin: theme.spacing(2, 0, 2),\n    backgroundColor: \"grey\",\n  },\n\n  cssLabel: {\n    color: `${theme.palette.secondary.light} !important`,\n  },\n  cssInput: {\n    color: `${theme.palette.primary.contrastText} !important`,\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: `${theme.palette.secondary.light} !important`,\n    },\n  },\n  cssFocused: {\n    color: `${theme.palette.secondary.light} !important`,\n  },\n  notchedOutline: {\n    borderWidth: \"1px\",\n    borderColor: `${theme.palette.secondary.light} !important`,\n  },\n}));\n\nconst Signup = () => {\n  const firstNameRef = React.useRef();\n  const lastNameRef = React.useRef();\n  const emailRef = React.useRef();\n  const passwordRef = React.useRef();\n  const passwordConfirmRef = React.useRef();\n\n  const { signup } = useAuth();\n  const [error, setError] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value).then(\n        (result) => {\n          registerUserInfo(\n            firstNameRef.current.value,\n            lastNameRef.current.value\n          );\n        }\n      );\n      history.push(\"/\");\n    } catch (error) {\n      setError(\"Failed to create your account.\" + error.message);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box p={2} />\n      <div className={classes.paper}>\n        <Typography\n          className={classes.greenBoldText}\n          component=\"h1\"\n          variant=\"h3\"\n        >\n          GoGreen\n        </Typography>\n        <Avatar className={classes.avatar}>\n          <EcoRoundedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        {error && (\n          <Alert severity=\"error\">\n            <AlertTitle>Error</AlertTitle>\n            {error}\n          </Alert>\n        )}\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"off\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                inputRef={firstNameRef}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    input: classes.cssInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                  inputMode: \"numeric\",\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"off\"\n                inputRef={lastNameRef}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    input: classes.cssInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                  inputMode: \"numeric\",\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"off\"\n                inputRef={emailRef}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    input: classes.cssInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                  inputMode: \"numeric\",\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                inputRef={passwordRef}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    input: classes.cssInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                  inputMode: \"numeric\",\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"passwordConfirm\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"passwordConfirm\"\n                autoComplete=\"off\"\n                inputRef={passwordConfirmRef}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel,\n                    focused: classes.cssFocused,\n                  },\n                }}\n                InputProps={{\n                  classes: {\n                    root: classes.cssOutlinedInput,\n                    input: classes.cssInput,\n                    focused: classes.cssFocused,\n                    notchedOutline: classes.notchedOutline,\n                  },\n                  inputMode: \"numeric\",\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            disabled={loading}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Button\n            component={RouterLink}\n            to=\"/\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.cancel}\n          >\n            Cancel\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link\n                component={RouterLink}\n                to=\"/login\"\n                variant=\"body2\"\n                color=\"secondary\"\n              >\n                Already have an account? Log in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\nexport default Signup;\n","import React from \"react\";\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EcoRoundedIcon from \"@material-ui/icons/EcoRounded\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useAuth } from \"../services/AuthContext\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(4),\n    marginBottom: theme.spacing(6),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    color: theme.palette.secondary.light,\n    backgroundColor: theme.palette.primary.contrastText,\n  },\n  greenBoldText: {\n    color: theme.palette.secondary.light,\n    fontWeight: \"Bolder\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 0),\n  },\n  cancel: {\n    margin: theme.spacing(2, 0, 2),\n    backgroundColor: \"grey\",\n  },\n\n  cssLabel: {\n    color: `${theme.palette.secondary.light} !important`,\n  },\n  cssInput: {\n    color: `${theme.palette.primary.contrastText} !important`,\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: `${theme.palette.secondary.light} !important`,\n    },\n  },\n  cssFocused: {\n    color: `${theme.palette.secondary.light} !important`,\n  },\n  notchedOutline: {\n    borderWidth: \"1px\",\n    borderColor: `${theme.palette.secondary.light} !important`,\n  },\n}));\n\nconst Login = () => {\n  const emailRef = React.useRef();\n  const passwordRef = React.useRef();\n\n  const classes = useStyles();\n\n  const { login } = useAuth();\n  const [error, setError] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to sign in\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box p={2} />\n      <div className={classes.paper}>\n        <Typography\n          className={classes.greenBoldText}\n          component=\"h1\"\n          variant=\"h3\"\n        >\n          GoGreen\n        </Typography>\n        <Avatar className={classes.avatar}>\n          <EcoRoundedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Log in\n        </Typography>\n        {error && (\n          <Alert severity=\"error\">\n            <AlertTitle>Error</AlertTitle>\n            {error}\n          </Alert>\n        )}\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"off\"\n            autoFocus\n            inputRef={emailRef}\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                focused: classes.cssFocused,\n              },\n            }}\n            InputProps={{\n              classes: {\n                root: classes.cssOutlinedInput,\n                input: classes.cssInput,\n                focused: classes.cssFocused,\n                notchedOutline: classes.notchedOutline,\n              },\n              inputMode: \"numeric\",\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"off\"\n            inputRef={passwordRef}\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                focused: classes.cssFocused,\n              },\n            }}\n            InputProps={{\n              classes: {\n                root: classes.cssOutlinedInput,\n                input: classes.cssInput,\n                focused: classes.cssFocused,\n                notchedOutline: classes.notchedOutline,\n              },\n              inputMode: \"numeric\",\n            }}\n          />\n          <Button\n            disabled={loading}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n          >\n            Log In\n          </Button>\n          <Button\n            component={RouterLink}\n            to=\"/\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.cancel}\n          >\n            Cancel\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link\n                component={RouterLink}\n                to=\"/forgot-password\"\n                variant=\"body2\"\n                color=\"secondary\"\n              >\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link\n                component={RouterLink}\n                to=\"/signup\"\n                variant=\"body2\"\n                color=\"secondary\"\n              >\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport EcoRoundedIcon from \"@material-ui/icons/EcoRounded\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useAuth } from \"../services/AuthContext\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(4),\n    marginBottom: theme.spacing(6),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    color: theme.palette.secondary.light,\n    backgroundColor: theme.palette.primary.contrastText,\n  },\n  greenBoldText: {\n    color: theme.palette.secondary.light,\n    fontWeight: \"Bolder\",\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 0),\n  },\n  cancel: {\n    margin: theme.spacing(2, 0, 2),\n    backgroundColor: \"grey\",\n  },\n\n  cssLabel: {\n    color: `${theme.palette.secondary.light} !important`,\n  },\n  cssInput: {\n    color: `${theme.palette.primary.contrastText} !important`,\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: `${theme.palette.secondary.light} !important`,\n    },\n  },\n  cssFocused: {\n    color: `${theme.palette.secondary.light} !important`,\n  },\n  notchedOutline: {\n    borderWidth: \"1px\",\n    borderColor: `${theme.palette.secondary.light} !important`,\n  },\n}));\n\nconst ForgotPassword = () => {\n  const emailRef = React.useRef();\n\n  const classes = useStyles();\n\n  const { resetPassword } = useAuth();\n  const [error, setError] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setMessage(\"\");\n      setError(\"\");\n      setLoading(true);\n      await resetPassword(emailRef.current.value);\n      setMessage(\"Check your inbox for further instructions\");\n    } catch (error) {\n      setError(\"Failed to reset password. \" + error.message);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box p={2} />\n      <div className={classes.paper}>\n        <Typography\n          className={classes.greenBoldText}\n          component=\"h1\"\n          variant=\"h3\"\n        >\n          GoGreen\n        </Typography>\n        <Avatar className={classes.avatar}>\n          <EcoRoundedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Reset Password\n        </Typography>\n        {error && (\n          <Alert severity=\"error\">\n            <AlertTitle>Error</AlertTitle>\n            {error}\n          </Alert>\n        )}\n        {message && (\n          <Alert severity=\"success\">\n            <AlertTitle>Reset Email Sent</AlertTitle>\n            {message}\n          </Alert>\n        )}\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"off\"\n            autoFocus\n            inputRef={emailRef}\n            InputLabelProps={{\n              classes: {\n                root: classes.cssLabel,\n                focused: classes.cssFocused,\n              },\n            }}\n            InputProps={{\n              classes: {\n                root: classes.cssOutlinedInput,\n                input: classes.cssInput,\n                focused: classes.cssFocused,\n                notchedOutline: classes.notchedOutline,\n              },\n              inputMode: \"numeric\",\n            }}\n          />\n          <Button\n            disabled={loading}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n          >\n            Reset via Email\n          </Button>\n          <Button\n            component={RouterLink}\n            to=\"/login\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.cancel}\n          >\n            GO TO LOG IN\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link\n                component={RouterLink}\n                to=\"/signup\"\n                variant=\"body2\"\n                color=\"secondary\"\n              >\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n","// TODO: Update this import\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#484848\",\n      main: \"#212121\",\n      mainLight: \"#303030\",\n      dark: \"#000000\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#80e27e\",\n      main: \"#4caf50\",\n      dark: \"#087f23\",\n      contrastText: \"#000\",\n    },\n  },\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\nimport FormatListNumberedRoundedIcon from \"@material-ui/icons/FormatListNumberedRounded\";\nimport BlurCircularRoundedIcon from \"@material-ui/icons/BlurCircularRounded\";\nimport theme from \"../theme\";\nimport Badge from \"@material-ui/core/Badge\";\n\nconst navTheme = createMuiTheme({\n  overrides: {\n    MuiBottomNavigation: {\n      root: {\n        position: \"fixed\",\n        bottom: 0,\n        width: \"100%\",\n        backgroundColor: theme.palette.primary.main,\n      },\n    },\n    MuiBottomNavigationAction: {\n      root: {\n        color: theme.palette.primary.contrastText,\n        boxSizing: \"border-box\",\n        \"&:hover\": {\n          color: theme.palette.secondary.main,\n        },\n        \"&$selected\": {\n          color: theme.palette.secondary.light,\n          \"&:hover\": {\n            color: theme.palette.secondary.main,\n          },\n        },\n      },\n    },\n  },\n});\n\nconst BottomNav = (props) => {\n  return (\n    <MuiThemeProvider theme={navTheme}>\n      <BottomNavigation\n        value={props.pageValue}\n        onChange={(event, newValue) => {\n          props.onPageChange(newValue);\n        }}\n        showLabels\n      >\n        <BottomNavigationAction\n          component={Link}\n          to=\"/\"\n          label=\"Home\"\n          icon={<HomeRoundedIcon />}\n        />\n        <BottomNavigationAction\n          component={Link}\n          to=\"/check-in\"\n          label=\"Check-in\"\n          icon={\n            <Badge\n              color=\"secondary\"\n              variant=\"dot\"\n              invisible={props.checkinCompleted}\n            >\n              <CheckCircleRoundedIcon />\n            </Badge>\n          }\n        />\n        <BottomNavigationAction\n          component={Link}\n          to=\"/badges\"\n          label=\"Badges\"\n          icon={<BlurCircularRoundedIcon />}\n        />\n        <BottomNavigationAction\n          component={Link}\n          to=\"/ranking\"\n          label=\"Ranking\"\n          icon={<FormatListNumberedRoundedIcon />}\n        />\n      </BottomNavigation>\n    </MuiThemeProvider>\n  );\n};\n\nexport default BottomNav;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst AlertDialog = (props) => {\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"ERROR\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {props.errorMsg}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onClose} autoFocus>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AlertDialog;\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EcoRoundedIcon from \"@material-ui/icons/EcoRounded\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { useAuth } from \"../services/AuthContext\";\nimport AlertDialog from \"./AlertDialog\";\nimport theme from \"../theme\";\n\nconst headerTheme = createMuiTheme({\n  overrides: {\n    MuiAppBar: {\n      colorPrimary: {\n        color: theme.palette.secondary.light,\n        backgroundColor: theme.palette.primary.dark,\n      },\n    },\n    MuiButton: {\n      root: {\n        position: \"absolute\",\n        right: 10,\n        color: theme.palette.secondary.main,\n        backgroundColor: theme.palette.primary.main,\n        \"&:hover\": {\n          color: theme.palette.secondary.light,\n          backgroundColor: theme.palette.primary.light,\n        },\n      },\n    },\n  },\n});\n\nconst Header = () => {\n  const [error, setError] = React.useState(\"\");\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n  const [alertOpen, setAlertOpen] = React.useState(false);\n\n  const handleLogout = async () => {\n    setError(\"\");\n\n    try {\n      await logout();\n      history.push(\"/login\");\n    } catch {\n      setError(\"Failed to log out\");\n      setAlertOpen(true);\n    }\n  };\n\n  const handleCloseAlert = () => {\n    setAlertOpen(false);\n  };\n\n  return (\n    <MuiThemeProvider theme={headerTheme}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            component={Link}\n            to=\"/\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"home\"\n          >\n            <EcoRoundedIcon />\n            <Box mr={1} />\n            <Typography variant=\"h5\">GoGreen</Typography>\n          </IconButton>\n          {currentUser === null ? (\n            <Button component={Link} to=\"/login\">\n              LOG IN\n            </Button>\n          ) : (\n            <React.Fragment>\n              <Button onClick={handleLogout}>LOG OUT</Button>\n              <AlertDialog\n                open={alertOpen}\n                onClose={handleCloseAlert}\n                errorMsg={error}\n              />\n            </React.Fragment>\n          )}\n        </Toolbar>\n      </AppBar>\n    </MuiThemeProvider>\n  );\n};\n\nexport default Header;\n","import moment from \"moment\";\n\nconst startOfToday = () => {\n  return moment.utc().startOf(\"day\").toDate();\n};\n\nexport default startOfToday;\n","function sleep(milliseconds) {\n  var start = new Date().getTime();\n  for (var i = 0; i < 1e7; i++) {\n    if (new Date().getTime() - start > milliseconds) {\n      break;\n    }\n  }\n}\n\nconst uniqueId = (prefix) => {\n  // TODO use shortid\n  let id = new Date().valueOf().toString(36);\n  sleep(1); // wait for one millisecond\n  return prefix ? prefix + id : id;\n};\n\nexport default uniqueId;\n","const scoreToColor = (score) => {\n  if (score > 75) {\n    return \"green\";\n  } else if (score > 50) {\n    return \"gold\";\n  } else if (score > 25) {\n    return \"orange\";\n  } else {\n    return \"red\";\n  }\n};\n\nexport default scoreToColor;\n","import { firestore as db } from \"./firebase\";\nimport startOfToday from \"../utils/startOfToday\";\nimport uniqueId from \"../utils/uniqueId\";\nimport scoreToColor from \"../utils/scoreToColor\";\n\nconst readGlobeMarkers = async () => {\n  return db\n    .collection(\"surveys\")\n    .where(\"date\", \">\", startOfToday())\n    .get()\n    .then((querySnapshot) => {\n      var markers = {};\n      querySnapshot.forEach((doc) => {\n        let city = doc.data().city;\n        let lat = doc.data().coordinates.lat;\n        let lng = doc.data().coordinates.lng;\n        let score = doc.data().score;\n        if (markers.hasOwnProperty(city)) {\n          markers[city] = {\n            ...markers[city],\n            sum: parseFloat(markers[city].sum) + parseFloat(score),\n            count: parseFloat(markers[city].count) + 1,\n          };\n        } else {\n          markers[city] = {\n            id: uniqueId(\"marker\"),\n            city: city,\n            color: \"green\",\n            coordinates: [lat, lng],\n            sum: parseFloat(score),\n            count: 1,\n          };\n        }\n      });\n      const markersArray = [];\n      Object.entries(markers).forEach(([k, v]) => {\n        let score = Math.ceil(parseFloat(v.sum) / parseFloat(v.count));\n        markersArray.push({\n          id: v.id,\n          city: v.city,\n          color: scoreToColor(score),\n          coordinates: v.coordinates,\n          value: 66,\n          score: score,\n        });\n      });\n\n      return markersArray;\n    });\n};\n\nexport default readGlobeMarkers;\n","import React from \"react\";\nimport ReactGlobe, { tween } from \"react-globe\";\nimport readGlobeMarkers from \"../services/readGlobeMarkers\";\nimport * as THREE from \"three\";\nimport { createGlowMesh } from \"three-glow-mesh\";\n\nconst random = (scaleFactor) => {\n  return Math.random() > 0.5\n    ? scaleFactor * Math.random()\n    : -scaleFactor * Math.random();\n};\n\nconst markerRenderer = (marker) => {\n  const size = Math.max(marker.value / 12, 1);\n  const geometry = new THREE.SphereGeometry(size, 10, 10);\n  const material = new THREE.MeshBasicMaterial({\n    color: new THREE.Color(marker.color),\n  });\n\n  const mesh = new THREE.Mesh(geometry, material);\n  const light = new THREE.PointLight(marker.color, 1, 0, 2);\n  const glow = createGlowMesh(mesh.geometry, {\n    backside: false,\n    coefficient: 0.2,\n    color: marker.color,\n    power: 3,\n    size: 15,\n  });\n  mesh.children = [];\n  mesh.add(light);\n  mesh.add(glow);\n\n  const companions = [];\n  for (let i = 0; i < 10; i++) {\n    const companionGeometry = new THREE.SphereGeometry(\n      Math.min(size * Math.random(), 3.5),\n      10,\n      10\n    );\n    const companionMaterial = new THREE.MeshBasicMaterial({\n      color: new THREE.Color(marker.color),\n    });\n    const companion = new THREE.Mesh(companionGeometry, companionMaterial);\n    companion.lookAt(new THREE.Vector3(0, 0, 0));\n    companions.push(companion);\n    mesh.add(companion);\n  }\n\n  companions.forEach((companion, i) => {\n    function animate() {\n      const from = {\n        opacity: 0.1,\n        position: companion.position.clone().toArray(),\n        scale: Math.max(0.5, Math.random()),\n      };\n      const to = {\n        opacity: 0.5,\n        position: [random(size * 3), random(size * 3), random(size)],\n        scale: 0.01,\n      };\n      tween({\n        from,\n        to,\n        animationDuration: 4000,\n        easingFunction: [\"Quadratic\", \"InOut\"],\n        onUpdate: () => {\n          const [x, y, z] = from.position;\n          const companionMaterial = companion.material;\n          const intensityChange = random(0.03);\n          if (\n            light.intensity + intensityChange > 0 &&\n            light.intensity + intensityChange < 1.8\n          ) {\n            light.intensity += intensityChange;\n          }\n          companionMaterial.opacity = from.opacity;\n          companion.scale.x = from.scale;\n          companion.scale.y = from.scale;\n          companion.scale.z = from.scale;\n          companion.position.set(x, y, z);\n        },\n        onEnd: animate,\n        delay: i * 200,\n      });\n    }\n    animate();\n  });\n  return mesh;\n};\n\nconst Globe = () => {\n  const [markers, setMarkers] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    async function check() {\n      try {\n        setLoading(true);\n        let response = await readGlobeMarkers();\n        setMarkers(response);\n        setLoading(false);\n      } catch (error) {\n        // TODO: handle error\n        setLoading(false);\n        console.log(error);\n      }\n    }\n    check();\n  }, []);\n\n  const options = {\n    cameraRotateSpeed: 0.5,\n    cameraAutoRotateSpeed: 0.35,\n    focusAnimationDuration: 2000,\n    enableMarkerGlow: \"true\",\n    globeCloudsOpacity: 0.5,\n    globeGlowColor: \"blue\",\n    enableMarkerTooltip: true,\n    markerTooltipRenderer: (marker) => `${marker.city}: ${marker.score}`,\n    markerRenderer,\n  };\n\n  if (loading) return <span>Loading</span>;\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"black\",\n        height: \"100vh\",\n      }}\n    >\n      <ReactGlobe\n        height=\"90vh\"\n        width=\"auto\"\n        markers={markers}\n        options={options}\n        initialCoordinates={[42.3355, 71.1685]}\n        initialCameraDistanceRadiusScale={5}\n      />\n    </div>\n  );\n};\n\nexport default Globe;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Typography } from \"@material-ui/core\";\nimport PlacesAutoComplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport theme from \"../theme\";\n\nconst useStyles = makeStyles((theme) => ({\n  cssLabel: {\n    color: `${theme.palette.secondary.light} !important`,\n  },\n  cssInput: {\n    color: `${theme.palette.primary.contrastText} !important`,\n  },\n  cssOutlinedInput: {\n    \"&$cssFocused $notchedOutline\": {\n      borderColor: `${theme.palette.secondary.light} !important`,\n    },\n  },\n  cssFocused: {\n    color: `${theme.palette.secondary.light} !important`,\n  },\n  notchedOutline: {\n    borderWidth: \"1px\",\n    borderColor: `${theme.palette.secondary.light} !important`,\n  },\n\n  autocompleteResults: {\n    padding: \"2px\",\n  },\n}));\n\nconst CityInputField = (props) => {\n  const classes = useStyles();\n\n  const { city, onSetCity, coordinates, onSetCoordinates } = props;\n\n  const handleSelect = async (value) => {\n    const results = await geocodeByAddress(value);\n    const latLng = await getLatLng(results[0]);\n    onSetCity(value);\n    onSetCoordinates(latLng);\n  };\n\n  const searchOptions = {\n    types: [\"(cities)\"],\n  };\n\n  return (\n    <React.Fragment>\n      <Typography color=\"secondary\">\n        Which city are you currently in?\n      </Typography>\n\n      <PlacesAutoComplete\n        value={city}\n        onChange={onSetCity}\n        onSelect={handleSelect}\n        searchOptions={searchOptions}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <>\n            <TextField\n              {...getInputProps({ placeholder: \"Type then select city\" })}\n              error={coordinates.lat === null || coordinates.lng === null}\n              variant=\"outlined\"\n              margin=\"dense\"\n              required\n              id=\"city\"\n              label=\"City\"\n              name=\"city\"\n              autoComplete=\"off\"\n              autoFocus\n              InputLabelProps={{\n                classes: {\n                  root: classes.cssLabel,\n                  focused: classes.cssFocused,\n                },\n              }}\n              InputProps={{\n                classes: {\n                  root: classes.cssOutlinedInput,\n                  input: classes.cssInput,\n                  focused: classes.cssFocused,\n                  notchedOutline: classes.notchedOutline,\n                },\n                inputMode: \"numeric\",\n              }}\n            />\n            <div>\n              {loading ? (\n                <div style={{ color: \"white\" }}>...loading</div>\n              ) : (\n                <>\n                  {!suggestions.length ? null : (\n                    <Paper\n                      elevation={0}\n                      className={classes.autocompleteResults}\n                    >\n                      {suggestions.map((suggestion, index) => {\n                        const style = {\n                          color: theme.palette.primary.contrastText,\n                          backgroundColor: suggestion.active\n                            ? theme.palette.secondary.main\n                            : theme.palette.primary.main,\n                        };\n                        return (\n                          <div\n                            key={index}\n                            {...getSuggestionItemProps(suggestion, { style })}\n                          >\n                            {suggestion.description}\n                          </div>\n                        );\n                      })}\n                    </Paper>\n                  )}\n                </>\n              )}\n            </div>\n          </>\n        )}\n      </PlacesAutoComplete>\n    </React.Fragment>\n  );\n};\n\nexport default CityInputField;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport LocalGasStationRoundedIcon from \"@material-ui/icons/LocalGasStationRounded\";\nimport EcoRoundedIcon from \"@material-ui/icons/EcoRounded\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst SurveyHelperDialog = () => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Typography color=\"secondary\" variant=\"body2\">\n        Need help?\n        <IconButton onClick={handleClickOpen}>\n          <HelpIcon color=\"secondary\" fontSize=\"small\" />\n        </IconButton>\n      </Typography>\n\n      <Dialog\n        onClose={handleClose}\n        TransitionComponent={Transition}\n        fullWidth={true}\n        maxWidth={\"sm\"}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        PaperProps={{\n          style: {\n            backgroundColor: \"#2e2e2e\",\n            color: \"white\",\n          },\n        }}\n      >\n        <DialogTitle>Help</DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            You need to select a level that best describes the environmental\n            friendliness of your commuting today. (Please be honest. The result\n            is anonymous.)\n          </Typography>\n          <Typography gutterBottom color=\"secondary\">\n            <EcoRoundedIcon fontSize=\"small\" /> Green: You commuted on foot, by\n            bike, with electric vehicle, by public transportation...\n          </Typography>\n          <Typography gutterBottom color=\"error\">\n            <LocalGasStationRoundedIcon fontSize=\"small\" /> Gasoline: You drove\n            a fossil-fueled vehicle.\n          </Typography>\n          <Typography gutterBottom>\n            In between green and gasoline, there are some intermediate levels\n            that you can choose.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"secondary\">\n            Got it\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default SurveyHelperDialog;\n","import React from \"react\";\nimport { Box, Button, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { green, red } from \"@material-ui/core/colors\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport theme from \"../theme\";\nimport CityInputField from \"./CityInputField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport LocalGasStationRoundedIcon from \"@material-ui/icons/LocalGasStationRounded\";\nimport EcoRoundedIcon from \"@material-ui/icons/EcoRounded\";\nimport SurveyHelperDialog from \"./SurveyHelperDialog\";\n\nconst surveyTheme = createMuiTheme({\n  palette: {\n    secondary: { main: theme.palette.secondary.main },\n  },\n  overrides: {\n    MuiToggleButtonGroup: {\n      root: {\n        padding: \"2px 5px\",\n        borderRadius: \"15px\",\n        backgroundImage: `linear-gradient(${green[500]}, ${red[300]})`,\n      },\n    },\n    MuiToggleButton: {\n      sizeLarge: {\n        padding: \"15px 45px\",\n      },\n      root: {\n        color: \"white\",\n        backgroundColor: \"rgba(0, 0, 0, .5)\",\n        fontWeight: \"lighter\",\n        margin: \"3px 0\",\n        borderRadius: 10,\n        \"&:hover\": {\n          color: \"black\",\n          backgroundColor: \"rgba(255, 255, 255, .4)\",\n        },\n        \"&$selected\": {\n          color: \"black\",\n          backgroundColor: \"rgba(255, 255, 255, .8)\",\n          fontWeight: \"bolder\",\n          \"&:hover\": {\n            backgroundColor: \"rgba(255, 255, 255, .4)\",\n          },\n        },\n      },\n    },\n    MuiButton: {\n      root: {\n        backgroundColor: \"rgba(255, 255, 255, .2)\",\n      },\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundColor: theme.palette.primary.mainLight,\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(10),\n    padding: \"30px 0px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  greenBold: {\n    color: theme.palette.secondary.light,\n    fontWeight: \"bolder\",\n    marginBottom: \"20px\",\n  },\n}));\n\nconst DailySurvey = (props, theme) => {\n  const classes = useStyles();\n\n  const {\n    city,\n    setCity,\n    coordinates,\n    setCoordinates,\n    level,\n    setLevel,\n    onSubmit,\n    submitError,\n  } = props;\n\n  const handleChange = (event, newLevel) => {\n    if (newLevel !== null) {\n      setLevel(newLevel);\n    }\n  };\n\n  return (\n    <MuiThemeProvider theme={surveyTheme}>\n      <Grid container>\n        <Grid item xs={1} sm={2} md={3} />\n        <Grid item xs={10} sm={8} md={6}>\n          <Paper className={classes.paper} elevation={10}>\n            <Typography\n              className={classes.greenBold}\n              variant=\"h5\"\n              component=\"h1\"\n            >\n              Today's Check-in\n            </Typography>\n            <CityInputField\n              city={city}\n              onSetCity={setCity}\n              coordinates={coordinates}\n              onSetCoordinates={setCoordinates}\n            />\n            <Box mt={2} />\n            <Typography color=\"secondary\">\n              How did you commute today?\n            </Typography>\n            <Typography color=\"secondary\">Select a level below.</Typography>\n\n            <ToggleButtonGroup\n              orientation=\"vertical\"\n              value={level}\n              size=\"large\"\n              exclusive\n              onChange={handleChange}\n            >\n              <ToggleButton value=\"100\" aria-label=\"All Green\">\n                <EcoRoundedIcon /> Green\n              </ToggleButton>\n              <ToggleButton value=\"75\" aria-label=\"Mostly Green\">\n                Mostly Green\n              </ToggleButton>\n              <ToggleButton value=\"50\" aria-label=\"Half\">\n                Half <EcoRoundedIcon /> Half <LocalGasStationRoundedIcon />\n              </ToggleButton>\n              <ToggleButton value=\"25\" aria-label=\"Mostly Gasoline\">\n                Mostly Gasoline\n              </ToggleButton>\n              <ToggleButton value=\"0\" aria-label=\"All Gasoline\">\n                <LocalGasStationRoundedIcon /> Gasoline\n              </ToggleButton>\n            </ToggleButtonGroup>\n\n            <SurveyHelperDialog />\n\n            <Button color=\"secondary\" onClick={onSubmit}>\n              Submit\n            </Button>\n            {submitError !== \"\" && (\n              <>\n                <Box mt={2} />\n                <Alert severity=\"error\" style={{ width: \"80%\" }}>\n                  Failed to submit. Invalid city name. Please type in a city\n                  name and select from the suggestions below the input field.\n                </Alert>\n              </>\n            )}\n          </Paper>\n        </Grid>\n        <Grid item xs={1} sm={2} md={3} />\n      </Grid>\n    </MuiThemeProvider>\n  );\n};\n\nexport default DailySurvey;\n","import firebase from \"firebase/app\";\nimport { firestore as db } from \"./firebase\";\nimport moment from \"moment\";\n\n// IMPORTANT: time in UTC\n// Returns error message or empty string (success)\nconst pushNewSurvey = (city, coordinates, score) => {\n  // The current user\n  const user = firebase.auth().currentUser;\n\n  // Push a new user into database\n  const newSurvey = {\n    uid: user.uid,\n    date: firebase.firestore.Timestamp.fromDate(moment.utc().toDate()),\n    city: city,\n    coordinates: {\n      lat: coordinates.lat,\n      lng: coordinates.lng,\n    },\n    score: score,\n  };\n  db.collection(\"surveys\")\n    .add(newSurvey)\n    .then((docRef) => {\n      console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n      return error.message;\n    });\n  return \"\";\n};\n\nexport default pushNewSurvey;\n","import firebase from \"firebase/app\";\nimport { firestore as db } from \"./firebase\";\nimport startOfToday from \"../utils/startOfToday\";\n\n// Returns Boolean\nconst checkSurveyCompleted = async () => {\n  // The current user\n  const user = firebase.auth().currentUser;\n  const uid = user.uid;\n\n  let BreakException = {};\n\n  // get all uid that have submitted the survey already\n  return db\n    .collection(\"surveys\")\n    .where(\"date\", \">\", startOfToday())\n    .get()\n    .then((querySnapshot) => {\n      try {\n        querySnapshot.forEach((doc) => {\n          if (doc.data().uid === uid) throw BreakException;\n        });\n      } catch (e) {\n        if (e === BreakException) return true;\n      }\n      return false;\n    });\n};\n\nexport default checkSurveyCompleted;\n","import React from \"react\";\nimport Globe from \"../components/Globe\";\nimport DailySurvey from \"../components/DailySurvey\";\nimport pushNewSurvey from \"../services/pushNewSurvey\";\nimport checkSurveyCompleted from \"../services/checkSurveyCompleted\";\n\nconst Checkin = (props) => {\n  const { setCheckinCompleted } = props;\n\n  const [surveyCompleted, setSurveyCompleted] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    async function check() {\n      try {\n        setLoading(true);\n        let response = await checkSurveyCompleted();\n        setSurveyCompleted(response);\n        setCheckinCompleted(response);\n        setLoading(false);\n      } catch (error) {\n        // TODO: handle error\n        setLoading(false);\n        console.log(error);\n      }\n    }\n    check();\n  }, [setCheckinCompleted]);\n\n  const [city, setCity] = React.useState(\"\");\n  const [coordinates, setCoordinates] = React.useState({\n    lat: null,\n    lng: null,\n  });\n  const [score, setScore] = React.useState(\"100\");\n\n  const [submitError, setSubmitError] = React.useState(\"\");\n\n  const handleSubmit = (e) => {\n    setSubmitError(\"\");\n\n    // if Invalid city name\n    if (coordinates.lat === null || coordinates.lng === null) {\n      setSubmitError(\n        \"Failed to submit. Invalid city name. Please type in a city name and select from the suggestions below the input field.\"\n      );\n      return;\n    }\n\n    // Push the new survey to firestore\n    const errorMsg = pushNewSurvey(city, coordinates, score);\n\n    // if pushing to firestore fails\n    if (errorMsg !== \"\") {\n      setSubmitError(errorMsg);\n      return;\n    }\n\n    setSurveyCompleted(true);\n    props.setCheckinCompleted(surveyCompleted);\n  };\n\n  if (loading) return <span>Loading</span>;\n\n  return (\n    <React.Fragment>\n      {!surveyCompleted ? (\n        <DailySurvey\n          city={city}\n          setCity={setCity}\n          coordinates={coordinates}\n          setCoordinates={setCoordinates}\n          level={score}\n          setLevel={setScore}\n          onSubmit={handleSubmit}\n          submitError={submitError}\n        />\n      ) : (\n        <Globe />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Checkin;\n","import React from \"react\";\n\nconst Badges = (props) => {\n  return <div style={{ color: \"white\" }}>badges</div>;\n};\n\nexport default Badges;\n","import { firestore as db } from \"./firebase\";\n\nconst readRankingData = async () => {\n  return db\n    .collection(\"surveys\")\n    .get()\n    .then((querySnapshot) => {\n      var cityDict = {};\n      querySnapshot.forEach((doc) => {\n        let city = doc.data().city;\n        let score = doc.data().score;\n        if (cityDict.hasOwnProperty(city)) {\n          cityDict[city] = {\n            ...cityDict[city],\n            sum: parseFloat(cityDict[city].sum) + parseFloat(score),\n            count: parseFloat(cityDict[city].count) + 1,\n          };\n        } else {\n          cityDict[city] = {\n            city: city,\n            sum: parseFloat(score),\n            count: 1,\n          };\n        }\n      });\n\n      var cityArray = [];\n      Object.entries(cityDict).forEach(([k, v]) => {\n        let score = Math.ceil(parseFloat(v.sum) / parseFloat(v.count));\n        cityArray.push({\n          city: v.city,\n          score: score,\n          userCount: v.count,\n        });\n      });\n      return cityArray;\n    });\n};\n\nexport default readRankingData;\n","import React from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nimport styled from \"styled-components\";\nimport readRankingData from \"../services/readRankingData\";\nimport { Grommet, DataTable, Box, Meter, Text } from \"grommet\";\n\nconst StyledTable = styled(DataTable)`\n  color: white;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundColor: theme.palette.primary.mainLight,\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(10),\n    padding: \"25px 0px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  greenBold: {\n    color: theme.palette.secondary.light,\n    fontWeight: \"bolder\",\n    marginBottom: \"20px\",\n  },\n}));\n\nconst tableTheme = {\n  button: {\n    color: \"white\",\n  },\n  dataTable: {\n    color: \"white\",\n    header: {\n      color: \"white\",\n      extend: {\n        color: \"white\",\n      },\n    },\n    body: {\n      color: \"white\",\n      extend: {\n        color: \"white\",\n      },\n    },\n    icons: {\n      color: \"white\",\n    },\n  },\n};\n\nconst columns = [\n  {\n    property: \"city\",\n    header: <Text>City</Text>,\n    primary: true,\n  },\n  {\n    property: \"userCount\",\n    header: \"Number of Users\",\n    align: \"center\",\n  },\n  {\n    property: \"score\",\n    header: \"Green Level\",\n    render: (datum) => (\n      <Box pad={{ vertical: \"xsmall\" }}>\n        <Meter\n          key={datum.city}\n          values={[{ value: datum.score }]}\n          thickness=\"medium\"\n          size=\"small\"\n          round={true}\n        />\n      </Box>\n    ),\n  },\n];\n\nconst Ranking = () => {\n  const classes = useStyles();\n\n  const [rankingData, setRankingData] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    async function check() {\n      try {\n        setLoading(true);\n        let response = await readRankingData();\n        setRankingData(response);\n        setLoading(false);\n      } catch (error) {\n        // TODO: handle error\n        setLoading(false);\n        console.log(error);\n      }\n    }\n    check();\n  }, []);\n\n  if (loading) return <span>Loading</span>;\n\n  return (\n    <Grid container direction=\"row\">\n      <Grid item xs={false} sm={2} lg={3} />\n      <Grid item xs={12} sm={8} lg={6}>\n        <Paper className={classes.paper} elevation={10}>\n          <Typography className={classes.greenBold} variant=\"h5\" component=\"h1\">\n            City Ranking\n          </Typography>\n          <Grommet theme={tableTheme} plain>\n            <StyledTable\n              sort={{ direction: \"desc\", property: \"score\" }}\n              sortable={true}\n              columns={columns.map((c) => ({\n                ...c,\n                search: c.property === \"city\",\n              }))}\n              data={rankingData}\n              step={100}\n            />\n          </Grommet>\n        </Paper>\n      </Grid>\n      <Grid item xs={false} sm={2} lg={3} />\n    </Grid>\n  );\n};\n\nexport default Ranking;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../services/AuthContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const { currentUser } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return currentUser ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect to=\"/login\" />\n        );\n      }}\n    ></Route>\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\nimport Signup from \"../pages/Signup\";\nimport Login from \"../pages/Login\";\nimport ForgotPassword from \"../pages/ForgotPassword\";\nimport BottomNav from \"./BottomNav\";\nimport Header from \"./Header\";\nimport Checkin from \"../pages/Checkin\";\nimport Badges from \"../pages/Badges\";\nimport Ranking from \"../pages/Ranking\";\nimport { AuthProvider } from \"../services/AuthContext\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport theme from \"../theme\";\n\nconst App = () => {\n  const [pageValue, setPageValue] = React.useState(0);\n  const [checkinCompleted, setCheckinCompleted] = React.useState(false);\n\n  return (\n    <div\n      style={{\n        backgroundColor: theme.palette.primary.dark,\n        height: \"100%\",\n        overflow: \"auto\",\n      }}\n    >\n      <Router basename={process.env.PUBLIC_URL}>\n        <AuthProvider>\n          <Switch>\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n            <React.Fragment>\n              <Grid container direction=\"column\">\n                <Grid item xs={12}>\n                  <Header />\n                </Grid>\n                <Grid item>\n                  <main>\n                    <PrivateRoute\n                      path=\"/check-in\"\n                      component={Checkin}\n                      setCheckinCompleted={setCheckinCompleted}\n                    />\n\n                    <PrivateRoute path=\"/badges\" component={Badges} />\n\n                    <PrivateRoute path=\"/ranking\" component={Ranking} />\n\n                    <Route exact path=\"/\">\n                      home\n                    </Route>\n                  </main>\n                </Grid>\n                <Grid item xs={12}>\n                  <BottomNav\n                    pageValue={pageValue}\n                    onPageChange={setPageValue}\n                    checkinCompleted={checkinCompleted}\n                  />\n                </Grid>\n              </Grid>\n            </React.Fragment>\n          </Switch>\n        </AuthProvider>{\" \"}\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}